# Use the root user instead of nginx
user  root;
worker_processes auto;

# Error log and process ID
error_log  /var/log/nginx/error.log;
pid        /var/run/nginx.pid;

# The "events" section is required by Nginx
events {
    worker_connections  1024;
}

# HTTP server configuration (port 7080)
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile        on;
    tcp_nopush      on;
    tcp_nodelay     on;
    keepalive_timeout  65;

    # Increase types_hash sizes to avoid warnings
    types_hash_max_size 4096;
    types_hash_bucket_size 128;

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;

    # Server block for handling HTTP traffic
    server {
        listen 7080;
        server_name flask.example.com;

        # This location is used for Certbot challenge verification
        location /.well-known/acme-challenge/ {
            root /var/www/certbot;
        }

        # Redirect all HTTP traffic to HTTPS
        location / {
            return 301 https://$host:7443$request_uri;  # Correctly redirects HTTP to HTTPS
        }

        # Optional: Configure logging (uncomment if needed)
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }

    # HTTPS server configuration (port 7443)
    server {
        listen 7443 ssl;
        server_name flask.example.com;
        
        # Use Cloudflare Origin Certificate for internal communication (Cloudflare to EC2)
        ssl_certificate /etc/nginx/ssl/origin.pem;
        ssl_certificate_key /etc/nginx/ssl/origin.key;

        # Use Let's Encrypt certificates for external traffic (Browser to EC2)
        ssl_certificate /etc/letsencrypt/live/flask.example.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/flask.example.com/privkey.pem;

        # SSL protocols and ciphers for better security
        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers HIGH:!aNULL:!MD5;

        # Proxy settings for the Flask app
        location / {
            proxy_pass http://localhost:5000;  # Assuming Flask app is running on port 9020
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Enable Gzip compression for better performance
        gzip on;
        gzip_types text/plain application/javascript text/css application/json;
        gzip_min_length 256;

        # Optional: Configure logging (uncomment if needed)
        access_log /var/log/nginx/access.log;
        error_log /var/log/nginx/error.log;
    }
}
